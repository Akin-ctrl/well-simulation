version: '3.8'

services:
  db:
    image: timescale/timescaledb:latest-pg14
    container_name: wellhead_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - wellnet
  pgadmin:
    image: dpage/pgadmin4
    container_name: wellhead_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wellnet

  simulator:
    build: .
    container_name: wellhead_simulator
    command: python wellhead_simulator.py
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    # environment:
      # - DB_HOST=db
      # - DB_PORT=5432
      # - DB_NAME=${POSTGRES_DB}
      # - DB_USER=${POSTGRES_USER}
      # - DB_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - wellnet

  modbus:
    build: .
    container_name: modbus_gateway
    command: python modbus_gateway.py
    ports:
      - "5020:5020"
    depends_on:
      - simulator
    networks:
      - wellnet
    env_file:
      - .env

  ingestion:
    build: .
    container_name: database_ingestion
    command: python database_ingestion.py
    depends_on:
      db:
        condition: service_healthy
      modbus:
        condition: service_started
    env_file:
      - .env
    # environment:
    #   - DB_HOST=db
    #   - DB_PORT=5432
    #   - DB_NAME=${POSTGRES_DB}
    #   - DB_USER=${POSTGRES_USER}
    #   - DB_PASSWORD=${POSTGRES_PASSWORD}
    #   - MODBUS_HOST=modbus
    networks:
      - wellnet

volumes:
  timescaledb_data:
  pgadmin_data:

networks:
  wellnet:
    driver: bridge